datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(uuid())
  login     String
  password  String
  version   Int       @default(1)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
}

model Artist {
  id         String    @id @default(uuid())
  name       String
  grammy     Boolean

  albums     Album[]
  tracks     Track[]

  favArtists FavArtist[]
}

model Album {
  id        String   @id @default(uuid())
  name      String
  year      Int
  artistId  String?
  artist    Artist?  @relation(fields: [artistId], references: [id], onDelete: SetNull)

  tracks    Track[]

  favAlbums FavAlbum[]
}

model Track {
  id        String   @id @default(uuid())
  name      String
  duration  Int
  artistId  String?
  artist    Artist?  @relation(fields: [artistId], references: [id], onDelete: SetNull)
  albumId   String?
  album     Album?   @relation(fields: [albumId], references: [id], onDelete: SetNull)

  favTracks FavTrack[]
}

model FavArtist {
  artistId  String
  artist    Artist  @relation(fields: [artistId], references: [id], onDelete: Cascade)

  @@id([artistId])
}

model FavAlbum {
  albumId   String
  album     Album   @relation(fields: [albumId], references: [id], onDelete: Cascade)

  @@id([albumId])
}

model FavTrack {
  trackId   String
  track     Track   @relation(fields: [trackId], references: [id], onDelete: Cascade)

  @@id([trackId])
}